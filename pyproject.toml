[project]
name = "cfscraper"
version = "0.1.0"
description = "bypass cloudflare's anti-bot page"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "cloudscraper>=1.2.71",
    "seleniumbase>=4.20.0",
    "redis>=5.0.0",
    "psycopg2-binary>=2.9.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.0",
    "prometheus-client>=0.22.1",
    "opentelemetry-api>=1.35.0",
    "opentelemetry-sdk>=1.35.0",
    "opentelemetry-instrumentation-fastapi>=0.56b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.56b0",
    "opentelemetry-instrumentation-redis>=0.56b0",
    "opentelemetry-instrumentation-httpx>=0.56b0",
    "opentelemetry-exporter-prometheus>=0.56b0",
    "sentry-sdk>=2.33.0",
    "structlog>=25.4.0",
    "opentelemetry-instrumentation-requests>=0.56b0",
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "pytest-benchmark>=4.0.0",
    "httpx>=0.25.0",
    "respx>=0.20.0",
    "fakeredis>=2.20.0",
    "factory-boy>=3.3.0",
    "freezegun>=1.2.0",
    "psutil>=5.9.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["app*"]
exclude = ["alembic*"]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=90",
    "--strict-markers",
    "--disable-warnings"
]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "security: Security tests",
    "slow: Slow running tests"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[dependency-groups]
dev = [
    "factory-boy>=3.3.3",
    "fakeredis>=2.30.1",
    "freezegun>=1.5.3",
    "psutil>=7.0.0",
    "pytest-asyncio>=1.0.0",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "respx>=0.22.0",
]
