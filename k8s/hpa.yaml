apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cfscraper-api-hpa
  labels:
    app: cfscraper-api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cfscraper-api
  minReplicas: 2
  maxReplicas: 20
  metrics:
  # CPU-based scaling
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  # Memory-based scaling
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom metrics-based scaling (queue depth)
  - type: Pods
    pods:
      metric:
        name: job_queue_size
      target:
        type: AverageValue
        averageValue: "10"
  # Request rate scaling
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "50"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 minutes
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60   # 1 minute
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 4
        periodSeconds: 30
      selectPolicy: Max

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cfscraper-worker-hpa
  labels:
    app: cfscraper-worker
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cfscraper-worker
  minReplicas: 1
  maxReplicas: 10
  metrics:
  # CPU-based scaling for workers
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  # Memory-based scaling for workers
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  # Queue depth for worker scaling
  - type: Object
    object:
      metric:
        name: job_queue_depth
      describedObject:
        apiVersion: v1
        kind: Service
        name: redis-service
      target:
        type: Value
        value: "20"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600  # 10 minutes - slower scale down for workers
      policies:
      - type: Percent
        value: 25
        periodSeconds: 120
      - type: Pods
        value: 1
        periodSeconds: 120
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 30   # Fast scale up for workers
      policies:
      - type: Percent
        value: 200
        periodSeconds: 30
      - type: Pods
        value: 3
        periodSeconds: 30
      selectPolicy: Max

---
# Vertical Pod Autoscaler for resource optimization
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: cfscraper-api-vpa
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cfscraper-api
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: cfscraper-api
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 1000m
        memory: 1Gi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits

---
# Pod Disruption Budget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cfscraper-api-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: cfscraper-api

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cfscraper-worker-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: cfscraper-worker
